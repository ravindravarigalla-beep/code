pipeline {

  environment {
    PROJECT = "	still-smithy-279711"
    APP_NAME = "sample"
    FE_SVC_NAME = "${APP_NAME}"
    CLUSTER = "cluster-1"
    CLUSTER_ZONE = "us-central1-c"
    IMAGE_TAG = "gcr.io/${PROJECT}/${APP_NAME}:latest"
    JENKINS_CRED = "${PROJECT}"
  }

  agent {
    kubernetes {
      
      defaultContainer 'jnlp'
      yaml """
apiVersion: v1
kind: Pod
metadata:
labels:
  component: ci
spec:
  # Use service account that can deploy to all namespaces
  
  containers:
  - name: maven
    image: maven:3.6.3-openjdk-11-slim
    command:
    - cat
    tty: true
  - name: gcloud
    image: gcr.io/google.com/cloudsdktool/cloud-sdk:latest
    command:
    - cat
    tty: true
  - name: helm
    image: gcr.io/still-smithy-279711/ravindra-helm
    command:
    - cat
    tty: true
    
"""
}
  }
  stages {
    stage ('SAST') {
      steps {
        container('maven') {
        withSonarQubeEnv('sonar') {
          sh """
             #mvn sonar:sonar 
             #cat target/sonar/report-task.txt
             """
        }
      }
    } 
   }
    stage('Test') {
      steps {
        container('maven') {
          sh """
            mvn sonar:sonar \
            -Dsonar.projectKey=webapp \
            -Dsonar.host.url=http://34.68.9.139:8080 \
            -Dsonar.login=a6538aefe07966a020e6d7d83a0a5e45665fc2e5
            mvn clean package 
           #aws eks --region us-east-2 update-kubeconfig --name cloudfront
          """
        }
      }
    }
    stage('Build and push image with Container Builder') {
      steps {
        container('gcloud') {
          sh "#gcloud auth list"
          sh "#PYTHONUNBUFFERED=1 gcloud builds submit -t  us.gcr.io/still-smithy-279711/go . "
          sh "gcloud container clusters get-credentials cluster-1 --zone us-central1-c --project still-smithy-279711"
        }
      }
    }
    stage('Deploy ') {
      steps {
        container('helm') {
          sh """
          #helm ls
          #aws eks --region us-east-2 update-kubeconfig --name cloudfront
          helm repo add stable https://kubernetes-charts.storage.googleapis.com/ 
          helm repo update 
          helm install nginx nginx/ 
          """ 
        }
      }
    }
  }
}
     
