pipeline {
  agent any 
  tools {
    maven 'maven'
  }
  stages {
    stage ('Initialize') {
      steps {
        sh '''
                    echo "PATH = ${PATH}"
                    echo "M2_HOME = ${M2_HOME}"
            ''' 
      }
    }
    
    stage ('Check-Git-Secrets') {
      steps {
        sh '#rm trufflehog || true'
        sh '#docker run gesellix/trufflehog --json https://github.com/cehkunal/webapp.git > trufflehog'
        sh '#cat trufflehog'
      }
    }
    
    stage ('Source Composition Analysis') {
      steps {
         sh '#rm owasp* || true'
         sh '#wget "https://raw.githubusercontent.com/cehkunal/webapp/master/owasp-dependency-check.sh" '
         sh '#chmod +x owasp-dependency-check.sh'
         sh '#bash owasp-dependency-check.sh'
         sh '#cat /var/lib/jenkins/OWASP-Dependency-Check/reports/dependency-check-report.xml'
        
      }
    }
    
    stage ('SAST') {
      steps {
        withSonarQubeEnv('sonar') {
          sh """
            mvn sonar:sonar \
            -Dsonar.projectKey=webapp \
            -Dsonar.host.url=http://34.71.91.120:9000 \
            -Dsonar.login=c299922717044805e2a4e0777d7d466c62e6974d
             """
          sh 'cat target/sonar/report-task.txt'
        }
      }
    }
    
    stage ('Build') {
      steps {
      sh 'mvn clean package'
       }
   }    
  }
}
